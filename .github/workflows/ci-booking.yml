name: ci-booking

on:
  push:
    paths:
      - 'pta-booking/**'
    tags:
      - 'v*.*.*-pta-booking'
    branches:
      - 'main'
  workflow_dispatch:

env:
  MODULE_NAME: pta-booking
  DOCKER_REGISTRY: ghcr.io
  DOCKER_IMAGE_NAME: ${{ github.repository }}/pta-booking

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout latest code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'

    - name: Build with Maven
      run: mvn -B package --file ${{ env.MODULE_NAME }}/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to the Container registry
      if: startsWith(github.ref, 'refs/tags/v') && endsWith(github.ref, '${{ env.MODULE_NAME }}')
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Sanitize tag name
      uses: actions/github-script@v7
      id: sanitized_tag
      with:
        result-encoding: string
        script: return '${{ github.ref }}'.replace('refs/tags/', '').replace('-${{ env.MODULE_NAME }}', '').trim()

    - name: Build and push Docker image
      if: startsWith(github.ref, 'refs/tags/v') && endsWith(github.ref, '${{ env.MODULE_NAME }}')
      id: push
      uses: docker/build-push-action@v5
      with:
        context: '/home/runner/work/pt-agency/pt-agency/${{ env.MODULE_NAME }}'
        file: '${{ env.MODULE_NAME }}/src/main/docker/Dockerfile.jvm'
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:latest
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ steps.sanitized_tag.outputs.result }}

