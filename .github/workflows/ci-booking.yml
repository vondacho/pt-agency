name: ci-booking

on:
  push:
    paths:
      - 'pta-booking/**'
    tags:
      - 'v*.*.*-pta-booking'
    branches:
      - 'main'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: pta-booking

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout latest code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'maven'
        cache-dependency-path: 'pta-booking/pom.xml'

    - name: Build with Maven
      run: mvn -B package --file pta-booking/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to the Container registry
      if: startsWith(github.ref, 'refs/tags/pta-booking/')
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      if: startsWith(github.ref, 'refs/tags/pta-booking/')
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=semver,pattern={{version}}

    - name: Build and push Docker image
      if: startsWith(github.ref, 'refs/tags/pta-booking/')
      uses: docker/build-push-action@v4
      with:
        context: .
        file: 'pta-booking/src/main/docker/Dockerfile.jvm'
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      if: startsWith(github.ref, 'refs/tags/pta-booking/')
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
